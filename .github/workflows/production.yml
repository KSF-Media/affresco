env:
  NODE_ENV: production
  PRODUCTION_BOTTEGA_URL: https://bottega.api.ksfmedia.fi/v1
  PRODUCTION_DUELLEN_URL: https://duellen.api.ksfmedia.fi
  PRODUCTION_FACEBOOK_APP_ID: '894000011480431'
  PRODUCTION_GOOGLE_CLIENT_ID: "584250859572-po558qgkq0b4u3j6a1ge40scjhops3oo"
  PRODUCTION_JANRAIN_FLOW_VERSION: '20201223120649370442'
  PRODUCTION_JANRAIN_LOGIN_CLIENT_ID: jzbqvf3p68e8hje6wrzhezk98m8qndmz
  PRODUCTION_JANRAIN_SSO_SERVER: https://ksf-media.eu.janrainsso.com
  PRODUCTION_JANRAIN_XD_RECEIVER_PATH: /xd_receiver.html
  PRODUCTION_LETTERA_URL: https://lettera.api.ksfmedia.fi/v3
  PRODUCTION_PERSONA_URL: https://persona.api.ksfmedia.fi/v1
jobs:
  check-ci:
    container:
      image: ksfmedia/diskho:gha-1.1
      options: "--cpus 2"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: "actions/checkout@v2"
      - name: Check CI script has been generated from Dhall
        run: |2
            make
            git diff --exit-code
  deploy-gs:
    container:
      image: ksfmedia/diskho:gha-1.1
      options: "--cpus 2"
    needs: check-ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: "actions/checkout@v2"
      - name: Setup Cloud SDK
        uses: "google-github-actions/setup-gcloud@v0.6.0"
        with:
          export_default_credentials: 'true'
          project_id: ksf-production
          service_account_key: "${{ secrets.GCP_PRODUCTION_AE_KEY }}"
      - run: |2
            yarn install --pure-lockfile
            mkdir -p build
      - name: Setup build cache for Mitt Konto
        uses: "actions/cache@v2"
        with:
          key: "${{ runner.os }}-mitt-konto-${{ hashFiles('apps/mitt-konto/yarn.lock')}}"
          path: |
            apps/mitt-konto/.spago
            apps/mitt-konto/output
      - name: "Setup build cache for Vetrina (for testing only)"
        uses: "actions/cache@v2"
        with:
          key: "${{ runner.os }}-vetrina-test-${{ hashFiles('apps/vetrina-test/yarn.lock')}}"
          path: |
            apps/vetrina-test/.spago
            apps/vetrina-test/output
      - name: Setup build cache for App article
        uses: "actions/cache@v2"
        with:
          key: "${{ runner.os }}-app-article-${{ hashFiles('apps/app-article/yarn.lock')}}"
          path: |
            apps/app-article/dist
      - name: Setup build cache for Corona banner
        uses: "actions/cache@v2"
        with:
          key: "${{ runner.os }}-corona-banner-${{ hashFiles('apps/corona-banner/yarn.lock')}}"
          path: |
            apps/corona-banner/dist
      - name: Setup build cache for HBL365
        uses: "actions/cache@v2"
        with:
          key: "${{ runner.os }}-hbl365-${{ hashFiles('apps/hbl365/yarn.lock')}}"
          path: |
            apps/hbl365/.spago
            apps/hbl365/output
      - name: Build Scripts
        run: |2
            ruby deploy.rb scripts
            cp -R apps/scripts/dist build/scripts
        shell: bash
      - env:
          MAINTENANCE_MODE: 'false'
          PRODUCTION_SENTRY_DSN: "https://54e59357e2fd42db917041739865e2c9@sentry.io/5174203"
        name: Build Mitt Konto
        run: |2
            ruby deploy.rb mitt-konto
            cp -R apps/mitt-konto/dist build/mitt-konto
        shell: bash
      - env:
          NODE_ENV: development
          SENTRY_DSN: "https://6479d7c55fbd4e0db7d9ac755083865f@sentry.io/3718842"
        name: "Build Vetrina (for testing only)"
        run: |2
            ruby deploy.rb vetrina-test
            cp -R apps/vetrina-test/dist build/vetrina-test
        shell: bash
      - env:
          ELECTION_BACKEND_URL: https://elections-eu.api.ksfmedia.fi/v1
          ELECTION_TYPE: EU
        name: "Build Elections (EU)"
        run: |2
            ruby deploy.rb elections
            cp -R apps/elections/dist build/elections-eu
        shell: bash
      - env:
          ELECTION_BACKEND_URL: https://election.api.ksfmedia.fi/v1
          ELECTION_TYPE: PARLIAMENT
        name: "Build Elections (Parliament)"
        run: |2
            ruby deploy.rb elections
            cp -R apps/elections/dist build/elections
        shell: bash
      - env:
          HIDE_LOGIN_LINKS: 'true'
          PRODUCTION_SENTRY_DSN: "https://a28dc2fb33d14a269f87ee4b3f2916d8@o360888.ingest.sentry.io/5707650"
        name: Build App article
        run: |2
            ruby deploy.rb app-article
            cp -R apps/app-article/dist build/app-article
        shell: bash
      - name: Build Corona banner
        run: |2
            ruby deploy.rb corona-banner
            cp -R apps/corona-banner/dist build/corona-banner
        shell: bash
      - name: Build HBL365
        run: |2
            ruby deploy.rb hbl365
            cp -R apps/hbl365/dist build/hbl365
        shell: bash
      - name: Build Prenumerera
        run: |2
            ruby deploy.rb prenumerera
            cp -R apps/prenumerera/dist build/prenumerera
        shell: bash
      - name: Upload Scripts
        uses: "google-github-actions/upload-cloud-storage@v0.9.0"
        with:
          credentials: "${{ secrets.GCP_PRODUCTION_KEY }}"
          destination: ksf-frontends/scripts
          parent: 'false'
          path: build/scripts
      - name: Upload Mitt Konto
        uses: "google-github-actions/upload-cloud-storage@v0.9.0"
        with:
          credentials: "${{ secrets.GCP_PRODUCTION_KEY }}"
          destination: ksf-frontends/mitt-konto
          parent: 'false'
          path: build/mitt-konto
      - name: "Upload Vetrina (for testing only)"
        uses: "google-github-actions/upload-cloud-storage@v0.9.0"
        with:
          credentials: "${{ secrets.GCP_PRODUCTION_KEY }}"
          destination: ksf-frontends/vetrina-test
          parent: 'false'
          path: build/vetrina-test
      - name: "Upload Elections (EU)"
        uses: "google-github-actions/upload-cloud-storage@v0.9.0"
        with:
          credentials: "${{ secrets.GCP_PRODUCTION_KEY }}"
          destination: ksf-frontends/elections-eu
          parent: 'false'
          path: build/elections-eu
      - name: "Upload Elections (Parliament)"
        uses: "google-github-actions/upload-cloud-storage@v0.9.0"
        with:
          credentials: "${{ secrets.GCP_PRODUCTION_KEY }}"
          destination: ksf-frontends/elections
          parent: 'false'
          path: build/elections
      - name: Upload App article
        uses: "google-github-actions/upload-cloud-storage@v0.9.0"
        with:
          credentials: "${{ secrets.GCP_PRODUCTION_KEY }}"
          destination: ksf-frontends/app-article
          parent: 'false'
          path: build/app-article
      - name: Upload Corona banner
        uses: "google-github-actions/upload-cloud-storage@v0.9.0"
        with:
          credentials: "${{ secrets.GCP_PRODUCTION_KEY }}"
          destination: ksf-frontends/corona-banner
          parent: 'false'
          path: build/corona-banner
      - name: Upload HBL365
        uses: "google-github-actions/upload-cloud-storage@v0.9.0"
        with:
          credentials: "${{ secrets.GCP_PRODUCTION_KEY }}"
          destination: ksf-frontends/hbl365
          parent: 'false'
          path: build/hbl365
      - name: Upload Prenumerera
        uses: "google-github-actions/upload-cloud-storage@v0.9.0"
        with:
          credentials: "${{ secrets.GCP_PRODUCTION_KEY }}"
          destination: ksf-frontends/prenumerera
          parent: 'false'
          path: build/prenumerera
  refresh_cdn_app-article:
    needs: deploy-gs
    runs-on: ubuntu-latest
    steps:
      - name: Install gcloud
        uses: "google-github-actions/setup-gcloud@v0.6.0"
        with:
          export_default_credentials: 'true'
          project_id: ksf-production
          service_account_key: "${{ secrets.GCP_PRODUCTION_KEY }}"
      - name: "Invalidate CDN cache for 'app-article'"
        run: |2
            gcloud compute url-maps invalidate-cdn-cache app-article --path "/*"
  refresh_cdn_frontends:
    needs: deploy-gs
    runs-on: ubuntu-latest
    steps:
      - name: Install gcloud
        uses: "google-github-actions/setup-gcloud@v0.6.0"
        with:
          export_default_credentials: 'true'
          project_id: ksf-production
          service_account_key: "${{ secrets.GCP_PRODUCTION_KEY }}"
      - name: "Invalidate CDN cache for 'ksf-frontends-lb'"
        run: |2
            gcloud compute url-maps invalidate-cdn-cache ksf-frontends-lb --path "/*"
  refresh_cdn_mitt-konto:
    needs: deploy-gs
    runs-on: ubuntu-latest
    steps:
      - name: Install gcloud
        uses: "google-github-actions/setup-gcloud@v0.6.0"
        with:
          export_default_credentials: 'true'
          project_id: ksf-production
          service_account_key: "${{ secrets.GCP_PRODUCTION_KEY }}"
      - name: "Invalidate CDN cache for 'mitt-konto'"
        run: |2
            gcloud compute url-maps invalidate-cdn-cache mitt-konto --path "/*"
name: production
on:
  push:
    branches:
      - master
