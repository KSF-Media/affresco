image: ksfmedia/diskho:lts-18.13

variables:
  DOCKER_DRIVER: overlay2
  GIT_SUBMODULE_STRATEGY: recursive
  CI_SCRIPTS: "${CI_PROJECT_DIR}/infra/ci-scripts"
  YARN_CACHE: "${CI_PROJECT_DIR}/.yarn-cache"

.app-article-ci-variables: &app-article-ci-vars
  SERVICE_NAME: app-article-server
  LETTERA_INTERNAL: "http://lettera/v4"
  AAS_LETTERA_URL: "https://lettera.staging.ksfmedia.fi/v3"
  AAP_LETTERA_URL: "https://lettera.api.ksfmedia.fi/v3"

before_script:
  - eval `${CI_SCRIPTS}/prepare_stage_envvars.py ${CI_ENVIRONMENT_SLUG}`

stages:
  - build
  - docker
  - deploy

# Build template
.build-app:
  stage: build
  environment: staging/$SERVICE_NAME
  only:
    - master
  cache:
    key: "affresco-yarn-cache"
    paths:
      - $YARN_CACHE
  artifacts:
    paths:
      - artifacts/
    when: always
    expire_in: 7 days
  script:
    - $CI_SCRIPTS/affresco/app-build.sh

# Docker build template
.build-docker:
  stage: docker
  environment: staging/$SERVICE_NAME
  only:
    - master
  script:
    # docker build & push staging
    - cd $CI_PROJECT_DIR/artifacts/staging/$SERVICE_NAME
    - $CI_SCRIPTS/docker-build.sh
    - $CI_SCRIPTS/auth-gcloud.sh
    - $CI_SCRIPTS/docker-push.sh
    # docker buld & push production
    - eval `${CI_SCRIPTS}/prepare_stage_envvars.py production`
    - cd $CI_PROJECT_DIR/artifacts/production/$SERVICE_NAME
    - $CI_SCRIPTS/docker-build.sh
    - $CI_SCRIPTS/auth-gcloud.sh
    - $CI_SCRIPTS/docker-push.sh

# Deploy template
.deploy:
  stage: deploy
  environment: staging/$SERVICE_NAME
  only:
    - master
  script:
    - $CI_SCRIPTS/auth-gcloud.sh
    - LETTERA_URL=$LETTERA_INTERNAL $CI_SCRIPTS/kubernetes-deployment.sh
    - $CI_SCRIPTS/affresco/app-upload.sh

# Build apps
app-article-build:
  extends: .build-app
  variables: *app-article-ci-vars

# Build docker images
app-article-docker-build:
  extends: .build-docker
  needs: 
    - app-article-build
  variables: *app-article-ci-vars

# Deploy Staging
deploy-app-article-staging:
  extends: .deploy
  needs: 
    - app-article-build
    - app-article-docker-build
  variables: *app-article-ci-vars

# Deploy production

deploy-app-article-production:
  extends: .deploy
  needs: 
    - app-article-build
    - app-article-docker-build
  environment: production/$SERVICE_NAME
  when: manual
  variables: *app-article-ci-vars
